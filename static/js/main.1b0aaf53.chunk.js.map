{"version":3,"sources":["components/navbar/navbar.js","components/resource/resHeader.js","components/resource/resDesc.js","components/resource/resOptions.js","components/resource/resDiscussion.js","containers/resourceFound.js","containers/resourceNotFound.js","containers/resource.js","components/cards/fullWidthCards.js","components/cards/masonCards.js","components/layoutOptions/layoutOptions.js","components/cards/listCards.js","containers/home.js","containers/user.js","containers/dashboard.js","containers/404.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","ResHeader","_ref","res","console","log","src","meta","image","alt","concat","title","link","ResDesc","date","createdAt","slice","time","description","author","username","ResOptions","ResDetails","class","rows","id","placeholder","ResourceFound","resource_resHeader","resource_resDesc","resDiscussion","resource_resOptions","ResourceNotFound","Resource","resource","resourceFound","resourceNotFound","CardList","onClick","slug","includes","imgStyle","backgroundImage","style","MasonCards","upvotes","length","LayoutOptions","display","changeDisplay","viewArry","name","tableview","fullwidth","masonry","isChecked","opt","undefined","map","Math","random","key","type","defaultChecked","onChange","htmlFor","ListCards","trimSnippet","snip","Home","resources","role","layoutOptions","Object","keys","i","fullWidthCards","listCards","masonCards","User","Dashboard","Notfound","history","createBrowserHistory","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","changeDisplayType","setState","localStorage","setItem","routeHandler","sections","window","location","pathname","split","route","path","changeRoute","r","push","some","viewResource","state","_this2","fetch","then","response","json","resourceData","getItem","_this3","listen","action","_this4","container","home","user","dashboard","src_containers_resource","notFound","_404","navbar_navbar","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b0aaf53.chunk.js","sourcesContent":["import React from 'react';\nimport './navbar.css'\n\nconst Navbar = () => (\n    <nav className=\"navbar\">\n        <a className=\"navbar-title\" href=\"/\">Rustys Resources</a>\n    </nav>\n);\n\nexport default Navbar;","import React from 'react';\nimport './resHeader.css'\n\nconst ResHeader = ({ res }) => {\n    console.log(res)\n    return (\n        <div className=\"resHeader\">\n                <div className=\"row\">\n                    <div className=\"col-md-2\">\n                        <img className=\"img-fluid\" src={res.meta.image} alt={`${res.meta.title} Thumbnail`} />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <a href={res.link}><h1>{res.meta.title}</h1></a>\n                        <a href={res.link}><p><i className=\"fas fa-link\"></i> {res.link}</p></a>\n                        <button className=\"btn btn-outline-warning\">Tag 1</button>\n                        <button className=\"btn btn-outline-warning\">Tag 2</button>\n                        <button className=\"btn btn-outline-warning\">Tag 3</button>\n                        <button className=\"btn btn-outline-warning\"><i className=\"fas fa-plus\"></i> 3 More</button>\n                    </div>\n                </div>\n            </div>\n    )\n};\n\nexport default ResHeader;","import React from 'react';\nimport './resDesc.css'\n\nconst ResDesc = ({ res }) => {\n    const date = res.createdAt.slice(0, 10);\n    const time = res.createdAt.slice(11, 16);\n    return (\n        <div className=\"resBox\">\n            <h5>Resource description</h5>\n            {res.meta.description}\n\n\n\n            <div className=\"resDesc-footer pt-3\">\n                <hr />\n\n                <div className=\"row\">\n                    <div className=\"col-md-4\">\n                        <h5 className=\"d-inline\"><i className=\"far fa-user-circle\"></i></h5>\n                        <p className=\"d-inline text-muted pl-2\">{res.author.username}</p>\n                    </div>\n                    <div className=\"col-md-4 text-center\">\n                        <h5 className=\"d-inline\"><i className=\"fas fa-calendar-day\"></i></h5>\n                        <p className=\"d-inline text-muted pl-2\">{date}</p>\n                    </div>\n                    <div className=\"col-md-4 text-right\">\n                        <h5 className=\"d-inline\"><i className=\"far fa-clock\"></i></h5>\n                        <p className=\"d-inline text-muted pl-2\">{time}</p>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n};\n\nexport default ResDesc;","import React from 'react';\nimport './resOptions.css'\n\nconst ResOptions = ({ res }) => {\n    return (\n        <div className=\"px-4 row\">\n        <div className=\"col-md-12\">\n            <button className=\"btn btn-outline-warning btn-block m-2\"><i className=\"far fa-thumbs-up\"></i> Upvote (155)</button>\n        </div>\n\n        <div className=\"col-md-12\">\n            <button className=\"btn btn-outline-warning btn-block m-2\"><i className=\"fas fa-thumbtack\"></i> Bookmark</button>\n        </div>\n\n        <div className=\"col-md-6\">\n            <button className=\"btn btn-outline-warning btn-block m-2\"><i className=\"fas fa-edit\"></i> Edit</button>\n        </div>\n\n        <div className=\"col-md-6\">\n            <button className=\"btn btn-outline-warning btn-block m-2\"><i className=\"fas fa-flag\"></i> Report</button>\n        </div>\n\n    </div>\n    )\n};\n\nexport default ResOptions;","import React from 'react';\n\nconst ResDetails = ({ res }) => {\n\n    return (\n        <div className=\"resBox mt-3\">\n            <h5>Resource Discussion</h5>\n            <div class=\"form-group\">\n                <textarea class=\"form-control\" rows=\"1\" id=\"comment\" placeholder=\"What are your thoughts on this resource?\"></textarea>\n            </div>\n            <p className=\"text-muted\">Currently no thoughts have been posted</p>\n        </div>\n    )\n};\n\nexport default ResDetails;","import React from 'react';\nimport './resource.css'\nimport ResHeader from '../components/resource/resHeader';\nimport ResDesc from '../components/resource/resDesc';\nimport ResOptions from '../components/resource/resOptions';\nimport ResDiscussion from '../components/resource/resDiscussion';\n\nconst ResourceFound = ({ res }) => {\n    return (\n        <div className=\"resWrapper\">\n            <ResHeader res={res} />\n\n            <div className=\"resBody\">\n                <div className=\"row\">\n                    <div className=\"col-md-8\">\n                        <ResDesc res={res} />\n                        <ResDiscussion res={res} />\n                    </div>\n                    <div className=\"col-md-4\">\n                        <ResOptions />\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n};\n\nexport default ResourceFound;","import React from 'react';\nimport './resource.css'\n\nconst ResourceNotFound = () => {\n    return (\n        <div className=\"resWrapper\">\n            <h1 className=\"text-white\">ResourceNotFound</h1>\n        </div>\n    )\n};\n\nexport default ResourceNotFound;","import React from 'react';\nimport ResourceFound from './resourceFound';\nimport ResourceNotFound from './resourceNotFound';\n\n\nconst Resource = ({ res, id }) => {\n\n    let resource = res[id]\n    if(resource) return <ResourceFound res={resource} />\n    else return <ResourceNotFound />\n\n};\n\nexport default Resource;","import React from 'react';\nimport './card.css'\n\nconst CardList = ({ resource, onClick, slug }) => {\n\n    if(!resource.meta.image) resource.meta.image = \"none\"\n    if (!resource.meta.image.includes(\"http\") || resource.meta.image.includes(\"vanguardngr\")) resource.meta.image = `https://via.placeholder.com/1500/2e303a/FFFFFF/?text=No%20Image%20Found`\n\n    const imgStyle = {\n        backgroundImage: `url(${resource.meta.image})`\n    };\n\n    return (\n        <div className=\"rescard\" onClick={() => onClick(slug)}>\n            <div>\n                <div className=\"cardImg\" style={imgStyle}>\n\n                </div>\n                <div className=\"resOptions\">\n                    <div className=\"cardIcon\"><i className=\"far fa-thumbs-up\"></i> 155</div>\n                    <div className=\"cardIcon\"><i className=\"fas fa-thumbtack\"></i> 15</div>\n                </div>\n            </div>\n\n\n            <div className=\"cardDesc\">\n                <h2>{resource.meta.title}</h2>\n                <p>{resource.meta.description}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\nimport './card.css'\n\nconst MasonCards = ({ resource, onClick, slug }) => {\n\n    if(!resource.meta.image) resource.meta.image = \"none\"\n    if (!resource.meta.image.includes(\"http\") || resource.meta.image.includes(\"vanguardngr\")) resource.meta.image = `https://via.placeholder.com/1500/2e303a/FFFFFF/?text=No%20Image%20Found`\n\n    \n        return (\n            <div className=\"p-2\" onClick={() => onClick(slug)}>\n                <div class=\"card cardRes\">\n                    <img class=\"card-img-top img-respsonsive\" src={resource.meta.image} alt={resource.meta.title.slice(0, 15)} />\n                    <div class=\"card-body\">\n                        <h1>{resource.meta.title}</h1>\n                        <p class=\"card-text\">{resource.meta.description}</p>\n                    </div>\n                    <div class=\"card-footer text-muted\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6 text-left\">\n                                <div className=\"footerButtons voteBtn\">\n                                    <i class=\"fas fa-thumbs-up\"></i>{resource.upvotes.length}\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 text-right\">\n                                <div className=\"footerButtons bookmarkBtn\">\n                                    <i class=\"fas fa-heart\"></i>\n                                </div>\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\nexport default MasonCards;","import React from 'react';\n\nconst LayoutOptions = ({ display, changeDisplay }) => {\n    const viewArry = [\"tableview\", \"fullwidth\", \"masonry\"]\n    const name = {tableview: \"Condensed\", fullwidth: \"Full Width\", masonry: \"Grid View\"  }\n\n\n    const isChecked = (opt) => {\n        if (display === undefined && opt === viewArry[0]) return true;\n        if (display === opt) return true;\n    };\n\n\n    function addOption(opt) {\n        const id = Math.random();\n        return (\n            <div key={opt + id} className=\"pretty p-default p-smooth p-bigger lang-controls\">\n                <input\n                    id={opt}\n                    type=\"checkbox\"\n                    defaultChecked={isChecked(opt)}\n                    onChange={() => changeDisplay(opt)}\n                />\n                <div className=\"state p-warning\">\n                    <label htmlFor={opt}>{name[opt]}</label>\n                </div>\n            </div>\n        );\n    }\n\n\n\n    return <div className=\"text-white text-center p-4\">{viewArry.map(addOption)}</div>;\n\n};\n\nexport default LayoutOptions;","import React from 'react';\n\nconst ListCards = ({ resource, onClick, slug }) => {\n\n  const trimSnippet = (type, snip) => {\n    if(snip === undefined) return `No ${type}`\n    if(type === \"title\" && snip.length > 150) {\n      return `${snip.slice(0, 150)}...`\n    }\n    if(type === \"description\" && snip.length > 100) {\n      return `${snip.slice(0, 100)}...`\n    }\n    else return snip\n  }\n\n\n  return (\n    <div className=\"cardList\">\n      <div className=\"row\">\n        <div className=\"col-md-1 py-2 text-center\">\n        <div className=\"footerButtons voteBtn\">\n        <i class=\"fas fa-thumbs-up\"></i>{resource.upvotes.length}\n    </div>\n          \n        </div>\n        <div className=\"col-md-11\">\n          <h2>{ trimSnippet(\"title\", resource.meta.title)}</h2>\n          <p> { trimSnippet(\"description\", resource.meta.description) } </p>\n        </div>\n        <hr />\n      </div>\n    </div>\n  )\n}\n\nexport default ListCards;","import React from 'react';\nimport FullWidthCards from '../components/cards/fullWidthCards';\nimport MasonCards from '../components/cards/masonCards'\nimport LayoutOptions from '../components/layoutOptions/layoutOptions';\nimport ListCards from '../components/cards/listCards';\n\nconst Home = ({ resources, onClick, display, changeDisplay }) => {\n    const cardView = {\n        tableview: \"px-5 mt-3\",\n        fullwidth: \"\",\n        masonry: \"card-columns px-5 mt-3\"\n    }\n    return (\n        <div>\n            <div class=\"alert alert-warning\" role=\"alert\">\n                Heads up! This is still very much a work in progress. Some aspects may take a while to load, contain bugs or be completely non functional\n            </div>\n\n            <LayoutOptions display={display} changeDisplay={changeDisplay} />\n            <p className=\"text-white text-center\">Displaying: {Object.keys(resources).length} Resources</p>\n            <div className={cardView[display]}>\n                {\n                    Object.keys(resources).map((res, i) => {\n                        if (display === \"fullwidth\") return <FullWidthCards key={i} slug={Object.keys(resources)[i]} resource={resources[res]} onClick={onClick} />\n                        if (display === \"tableview\") return <ListCards key={i} slug={Object.keys(resources)[i]} resource={resources[res]} onClick={onClick} />\n                        else return <MasonCards key={i} slug={Object.keys(resources)[i]} resource={resources[res]} onClick={onClick} />\n                    })\n                }\n            </div>\n\n        </div>\n    )\n};\n\nexport default Home;","import React from 'react';\n\nconst User = () => (\n    <h1 className=\"text-white text-center\">User Page</h1>\n);\n\nexport default User;","import React from 'react';\n\nconst Dashboard = () => (\n    <h1>Dashboard Page</h1>\n);\n\nexport default Dashboard;","import React from 'react';\n\nconst Notfound = () => (\n    <h1>404 - Not Found Page</h1>\n);\n\nexport default Notfound;","import React, { Component } from 'react';\nimport { createBrowserHistory } from 'history';\nimport Navbar from './components/navbar/navbar';\nimport Resource from './containers/resource';\nimport Home from './containers/home';\nimport User from './containers/user';\nimport Dashboard from './containers/dashboard';\nimport NotFound from './containers/404';\nimport './App.css'\n\n// Listens for URL Changes\nconst history = createBrowserHistory();\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      resources: [],\n      route: `home`,\n      display: \"masonry\"\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://dev-resources.herokuapp.com/resource/all')\n      .then(response => response.json())\n      .then(resourceData => { this.setState({ resources: resourceData }) });\n      if(localStorage.getItem(\"display\") === undefined) this.setState({display: \"masonry\"})\n      else this.setState({display: localStorage.getItem(\"display\")})\n      this.routeHandler()\n\n  }\n  componentDidUpdate() {\n    history.listen((location, action) => {\n      this.routeHandler()\n    });\n  }\n\n\n  changeDisplayType = (opt) => {\n    console.log(\"CHANGIN TYPE HERE\", opt)\n    this.setState({display: opt})\n    localStorage.setItem(\"display\", opt);\n  }\n\n  routeHandler = () => {\n    const sections = window.location.pathname.slice(1).split(\"/\")\n    const pages = [\"resource\", \"user\", \"dashboard\"]\n    if(!pages.includes(sections[0])) {\n      (sections[0] === \"\" ? sections[0] = \"home\" : sections[0] = \"notFound\")\n    }\n    this.setState({route: sections[0]})\n    this.setState({path: sections[1]})\n  }\n\n  changeRoute = (r,) => {\n    console.log(\"CHANGING ROUTE\", r)\n    history.push(r, { some: 'state' })\n  }\n\n  viewResource = (slug) => {\n    this.changeRoute(`/resource/${slug}`)\n  }\n\n  render() {\n\n    const container = {\n      home: <Home resources={this.state.resources} onClick={(res) => this.viewResource(res)} display={this.state.display} changeDisplay={(opt) => this.changeDisplayType(opt)} />,\n      user: <User />,\n      dashboard: <Dashboard />,\n      resource: <Resource res={this.state.resources} id={this.state.path}/>,\n      notFound: <NotFound />\n    }\n\n    console.log(\"DISPLAY\", this.state.display)\n    \n    return (\n      <div className=\"App\">\n        <Navbar />\n        {container[this.state.route]}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}